-- Script SQL para criar a tabela de players no Supabase
-- Execute este script no SQL Editor do Supabase

-- Criar tabela de players
CREATE TABLE IF NOT EXISTS public.players (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name TEXT NOT NULL UNIQUE,
    password_hash TEXT NOT NULL,
    best_score INTEGER DEFAULT 0,
    best_level INTEGER DEFAULT 1,
    total_games INTEGER DEFAULT 0,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Criar índices para melhor performance
CREATE INDEX IF NOT EXISTS idx_players_name ON public.players(name);
CREATE INDEX IF NOT EXISTS idx_players_best_score ON public.players(best_score DESC);

-- Habilitar Row Level Security (RLS)
ALTER TABLE public.players ENABLE ROW LEVEL SECURITY;

-- Criar política para permitir leitura pública do ranking
CREATE POLICY "Allow public read access for leaderboard" ON public.players
    FOR SELECT USING (true);

-- Criar política para permitir inserção de novos players
CREATE POLICY "Allow public insert for new players" ON public.players
    FOR INSERT WITH CHECK (true);

-- Criar política para permitir update apenas do próprio player
CREATE POLICY "Allow update own player data" ON public.players
    FOR UPDATE USING (true) WITH CHECK (true);

-- Função para atualizar o timestamp updated_at automaticamente
CREATE OR REPLACE FUNCTION public.handle_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = timezone('utc'::text, now());
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Trigger para atualizar updated_at automaticamente
CREATE TRIGGER handle_updated_at
    BEFORE UPDATE ON public.players
    FOR EACH ROW
    EXECUTE FUNCTION public.handle_updated_at();
